# Cleans and recodes baseline data from ABCD_Gather_Data. No imaging or biospecimen data. 
# OUTPUTS: baseline data renamed, recoded, summed, averaged, etc. df = bs_data_num, file = "ABCD_BASE_bx_coded.RData"

# R Code:  
library(boot)
library(readxl)
library(psych)
library(tidyr)
library(plyr)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(mosaic)
library(optLog)

# Function to load Rdata file:
loadRData <- function(fileName){
  #loads an RData file, and returns it
  load(fileName)
  get(ls()[ls() != "fileName"])
}

#rm(list=ls())


# Set data and working directories
data.dir <- "____________"
setwd <- "_______"

#load baseline df created with ABCD_Gather_Data
bsdata <- loadRData("ABCD_BASE_bx_data.RDATA") #loads bsdata df 
bs_data_num <- bsdata


##############################################################
################ BASELINE RECODE/CALCULATE ###################
##############################################################
#recoding to numerics and summing if necessary

##############################################################
###################### DEMOGRAPHICS ##########################
##############################################################

#sex
bs_data_num$sex <- recode(bs_data_num$sex,'M'=1,'F'=0)

#income
bs_data_num$household.income.bl <- recode(bs_data_num$household.income.bl,'[<50K]'= 1, '[>=50K & <100K]' = 2, '[>=100K]'= 3)

#educ
bs_data_num$high.educ.bl <- recode(bs_data_num$high.educ.bl,'< HS Diploma'= 1, 'HS Diploma/GED'= 2, 'Some College'=3, 'Bachelor' = 4, 'Post Graduate Degree' = 5)

#married
bs_data_num$married.bl <- recode(bs_data_num$married.bl, 'no'= 1, 'yes'= 2)

#married or living together
bs_data_num$married.or.livingtogether.bl <- recode(bs_data_num$married.or.livingtogether.bl,'no'= 1, 'yes'= 2)

#race
#relevel to make the majority race the first factor
bs_data_num$race_ethnicity <- as.factor(as.character(bs_data_num$race_ethnicity))
bs_data_num$race_ethnicity <- relevel(bs_data_num$race_ethnicity, "White")
#recode to numerics
bs_data_num$race_ethnicity_num <- recode(bs_data_num$race_ethnicity,'White'= 1, 'Black'= 2, 'Hispanic' =3, 'Asian'=4, 'Other' = 5)

#race.6level
#relevel to make the majority race the first factor
bs_data_num$race.6level <- as.factor(as.character(bs_data_num$race.6level))
bs_data_num$race.6level <- relevel(bs_data_num$race.6level, "White")
#recode to numerics
bs_data_num$race.6level_num <- recode(bs_data_num$race.6level,'White'= 1, 'Black'= 2, 'Mixed' =3, 'Other'=4, 'Asian' = 5, 'AIAN/NHPI'=6)


#####################################
############## TRAUMA ###############
#####################################
#ksads recoded as "No" = 0, "Yes" = 1
#can uncomment below if you want NAs to also be coded as 0
index <- colnames(bs_data_num)[which(substr(colnames(bs_data_num),1,10) == "ksads_ptsd")]
for(i in index){
  bs_data_num[,i]<-recode(bs_data_num[,i], "No"=0,"Yes"=1)
  #bs_data_num[is.na(bs_data_num[,i]),i] <- 0
}

#sum
bs_data_num$ptsd_sum <- with(bs_data_num, ksads_ptsd_raw_754_p+ksads_ptsd_raw_755_p+ksads_ptsd_raw_756_p+
                             ksads_ptsd_raw_757_p+ksads_ptsd_raw_758_p+ksads_ptsd_raw_759_p+
                             ksads_ptsd_raw_760_p+ksads_ptsd_raw_761_p+ksads_ptsd_raw_762_p+
                             ksads_ptsd_raw_763_p+ksads_ptsd_raw_764_p+ksads_ptsd_raw_765_p+
                             ksads_ptsd_raw_766_p+ksads_ptsd_raw_767_p+ksads_ptsd_raw_768_p+
                             ksads_ptsd_raw_769_p+ksads_ptsd_raw_770_p)

#binary yes/no on all questions combined 
bs_data_num$ptsd_binary <- ifelse(bs_data_num$ptsd_sum == 0, 0, 1)

#####################################
####### FAMILY HISTORY  #############
#####################################
#famhx - "Has ANY blood relative of your child ever had..."
#ITEMS:
#famhx_4_p             #alcohol
#famhx_7_yes_no_p      #mania
#famhx_8_yes_no_p      #halucinations
#famhx_9_yes_no_p      #criminal
#famhx_10_yes_no_p     #nerves
#famhx_11_yes_no_p     #therapy
#famhx_12_yes_no_p     #hospitalizations
#famhx_13_yes_no_p     #suicide
#fam_history_5_yes_no  #drugs

#Rename one oddball variable 
colnames(bs_data_num)[colnames(bs_data_num)=="fam_history_5_yes_no"] <- "famhx_5_yes_no_p"

#recoded as yes = 1, no, refuse, AND don't know = 0
#can uncomment below if you want NAs to also be coded as 0
index <- colnames(bs_data_num)[which(substr(colnames(bs_data_num),1,6) == "famhx_")]
for(i in index){
  bs_data_num[,i]<-recode(bs_data_num[,i], "No"=0,"Yes"=1,"Don't know" = 0, "Refuse to answer" = 0)
  #bs_data_num[is.na(bs_data_num[,i]),i] <- 0
}

#sum
bs_data_num$famhx_sum <- with(bs_data_num, famhx_10_yes_no_p+famhx_13_yes_no_p+famhx_12_yes_no_p+famhx_11_yes_no_p+famhx_4_p+famhx_7_yes_no_p+famhx_8_yes_no_p+famhx_9_yes_no_p+famhx_5_yes_no_p)

#####################################
####### ECONOMIC ADVERSITY ##########
#####################################
#ITEMS:
#demo_fam_exp1_v2b  #no food
#demo_fam_exp2_v2b  #no telephone
#demo_fam_exp3_v2b  #no mortgage
#demo_fam_exp4_v2b  #evicted
#demo_fam_exp5_v2b  #no utilities
#demo_fam_exp6_v2b  #no medical care
#demo_fam_exp7_v2b  #no dental care

#recode no = 0, yes = 1
#can uncomment below if you want NAs to be coded as 0
index <- paste0("demo_fam_exp",1:7,"_v2b")
for(i in index){
  bs_data_num[,i]<-recode(bs_data_num[,i], "No"=0,"Yes"=1,"Refuse to answer" = 0)
  #bs_data_num[is.na(bs_data_num[,i]),i] <- 0
}

#sum
bs_data_num$econo_sum <- with(bs_data_num, demo_fam_exp1_v2b+
                                 demo_fam_exp2_v2b+
                                 demo_fam_exp3_v2b+
                                 demo_fam_exp4_v2b+
                                 demo_fam_exp5_v2b+
                                 demo_fam_exp6_v2b+
                                 demo_fam_exp7_v2b)

#binary yes/no on all questions combined 
bs_data_num$econo_binary <- ifelse(bs_data_num$econo_sum == 0, 0, 1)

#####################################
##### SUBSTANCE ACCESSIBILITY #######
#####################################
#ITEMS: 
#su_crpf_avail_1_p_num #alcohol
#su_crpf_avail_2_p_num #cigarettes
#su_crpf_avail_3_p_num #vape
#su_crpf_avail_4_p_num #weed
#su_crpf_avail_5_p_num #cocaine
#su_crpf_avail_6_p_num #medical marijuana legal
#su_crpf_avail_7_p_num #med marij
#su_crpf_avail_8_p_num #rx med marij
#su_crpf_avail_9_p_num #fam with marij rx

#recoded with "very hard" and "don't know" as 0
#can uncomment below if you want NAs to be also coded as 0
index <- paste0("su_crpf_avail_",1:5,"_p")
for(i in index){
    bs_data_num[,i]<-recode(bs_data_num[,i], 'Very hard'=0,'Sort of hard'=1,'Sort of easy'=2,'Very easy'=3,"Don't know"=0)
  #bs_data_num[is.na(bs_data_num[,i]),i] <- 0
}

index <- paste0("su_crpf_avail_",7:8,"_p")
for(i in index){
  bs_data_num[,i]<-recode(bs_data_num[,i], 'Very hard'=0,'Sort of hard'=1,'Sort of easy'=2,'Very easy'=3,"Don't know"=0)
  #bs_data_num[is.na(bs_data_num[,i]),i] <- 0
}

bs_data_num$su_crpf_avail_6_p <- recode(bs_data_num$su_crpf_avail_6_p, 'No'=0,'Yes'=1,'I do not know'=0) 
bs_data_num$su_crpf_avail_9_p <- recode(bs_data_num$su_crpf_avail_9_p, "0"=0,"1-3"=1,"4-6"=2,"7-9"=3,"Don't know"=0,"10 or more people"=4) 
#bs_data_num$su_crpf_avail_6_p[is.na(bs_data_num$su_crpf_avail_6_p)] = 0
#bs_data_num$su_crpf_avail_9_p[is.na(bs_data_num$su_crpf_avail_9_p)] = 0

bs_data_num$crpf_sum <- with(bs_data_num,su_crpf_avail_1_p,su_crpf_avail_2_p,su_crpf_avail_3_p,su_crpf_avail_4_p,
                              su_crpf_avail_5_p,su_crpf_avail_6_p,su_crpf_avail_7_p,su_crpf_avail_8_p,su_crpf_avail_9_p)

#####################################
#### FAMILY CONFLICT AND BULLYING ###
#####################################
#family conflict - as numeric
bs_data_num$fes_ss_fc_p <- as.numeric(as.integer(bs_data_num$fes_ss_fc_p))
bs_data_num$fes_y_ss_fc <- as.numeric(as.integer(bs_data_num$fes_y_ss_fc))

#Bullying - recode 
bs_data_num$ksads_back_c_bully_p <- recode(bs_data_num$ksads_back_c_bully_p, '0'=0,'Yes'=1) 

#####################################
######### ASR: PARENT BX ############
#####################################
#criminal behaviors (trouble with the law)
bs_data_num$asr_crime <- recode(bs_data_num$asr_q92_p, 'Not True'=0,'Somewhat/Sometimes True'=1,'Very True/Often True'=2) 
#binary 
bs_data_num$asr_crime_binary <- ifelse(bs_data_num$asr_crime == 0, 0, 1)

#substance use - continuous 'how many times in the past 6 mo have you...'
#ITEMS: 
#asr_q124_p #used tobacco
#asr_q125_p #been drunk
#asr_q126_p #used non-medical drugs

#recode to numeric
index <- paste0("asr_q12",4:6,"_p")
for(i in index){
    bs_data_num[,i]<-as.numeric(as.integer(bs_data_num[,i]))
}

#sum
bs_data_num$asr_substance_sum <- c(bs_data_num$asr_q124_p+
                                        bs_data_num$asr_q125_p+
                                        bs_data_num$asr_q126_p)
#binary
bs_data_num$asr_substance_binary <- ifelse(bs_data_num$asr_substance_sum == 0, 0, 1)

#creating new variables recoded as dichotomous
bs_data_num$asr_q124_p_yesno[bs_data_num$asr_q124_p > 0] <- "yes"
bs_data_num$asr_q124_p_yesno[bs_data_num$asr_q124_p  <= 0] <- "no"
bs_data_num$asr_q125_p_yesno[bs_data_num$asr_q125_p > 0] <- "yes"
bs_data_num$asr_q125_p_yesno[bs_data_num$asr_q125_p  <= 0] <- "no"
bs_data_num$asr_q126_p_yesno[bs_data_num$asr_q126_p > 0] <- "yes"
bs_data_num$asr_q126_p_yesno[bs_data_num$asr_q126_p  <= 0] <- "no"
#numeric
bs_data_num$asr_q124_p_binary <- recode(bs_data_num$asr_q124_p_yesno,"yes"=1,"no"=0)
bs_data_num$asr_q125_p_binary <- recode(bs_data_num$asr_q125_p_yesno,"yes"=1,"no"=0)
bs_data_num$asr_q126_p_binary <- recode(bs_data_num$asr_q126_p_yesno,"yes"=1,"no"=0)

#####################################
#### ASR: PARENT PSYCHOPATHOLOGY ####
#####################################
#Continuous scales as.numeric
index <- colnames(bs_data_num)[which(substr(colnames(bs_data_num),1,7) == "asr_scr")]
for(i in index){
  bs_data_num[,i]<-as.numeric(as.integer(bs_data_num[,i]))
}

#####################################
########### CBCL: TOTALS ############
#####################################
#Continuous scales as.numeric
index <- colnames(bs_data_num)[which(substr(colnames(bs_data_num),1,12) == "cbcl_scr_syn")]
for(i in index){
  bs_data_num[,i]<-as.numeric(as.integer(bs_data_num[,i]))
}

##############################################################
########## CODE LIFE EVENTS (PLE) MEAN AND SUM SCORES ########
##############################################################
#load in data file that split the ple baseline and year 1 events ("happened before baseline" or "happened in the last year from year1 appt")
ple_full <- loadRData("/Volumes/Labs/ABCD_studydata/workbench.Colaizzi/Stress/abcd_adversity_data_all_BASE.RData")
ple_scores <- ple_full %>% select(c(contains("subject"),starts_with("ple_bs")))
bs_data_num <- inner_join(bs_data_num,ple_scores, by="src_subject_id")

#TOTALS
#parent report total
bs_data_num$ple_p_total <- with(bs_data_num,ple_bs_died+
                                   ple_bs_newsib+
                                   ple_bs_newjob+
                                   ple_bs_step+  
                                   ple_bs_jail+
                                   ple_bs_move+
                                   ple_bs_school+
                                   ple_bs_law+
                                   ple_bs_separ+
                                   ple_bs_victim+
                                   ple_bs_sib+
                                   ple_bs_mh+
                                   ple_bs_friend_died+
                                   ple_bs_arrest+
                                   ple_bs_away+
                                   ple_bs_job+
                                   ple_bs_argue+
                                   ple_bs_ill+
                                   ple_bs_sud+
                                   ple_bs_financial+
                                   ple_bs_friend_injur+                 
                                   ple_bs_friend+
                                   ple_bs_crime)                         
#bs_data_num$ple_p_total_bs[is.na(bs_data_num$ple_p_total_bs)] = 0

#youth report total
bs_data_num$ple_y_total <- with(bs_data_num,ple_bs_y_died+
                                   ple_bs_y_newsib+
                                   ple_bs_y_newjob+
                                   ple_bs_y_step+  
                                   ple_bs_y_jail+
                                   ple_bs_y_move+
                                   ple_bs_y_school+
                                   ple_bs_y_law+
                                   ple_bs_y_separ+
                                   ple_bs_y_victim+
                                   ple_bs_y_sib+
                                   ple_bs_y_mh+
                                   ple_bs_y_friend_died+
                                   ple_bs_y_arrest+
                                   ple_bs_y_away+
                                   ple_bs_y_job+
                                   ple_bs_y_argue+
                                   ple_bs_y_ill+
                                   ple_bs_y_sud+
                                   ple_bs_y_financial+
                                   ple_bs_y_friend_injur+                 
                                   ple_bs_y_friend+
                                   ple_bs_y_crime)                         
#bs_data_num$ple_y_total_bs[is.na(bs_data_num$ple_y_total_bs)] = 0

#BINARY
bs_data_num$ple_p_binary <- ifelse(bs_data_num$ple_p_total == 0, 0, 1)
bs_data_num$ple_y_binary <- ifelse(bs_data_num$ple_y_total == 0, 0, 1)
bs_data_num$ple_p_bad_binary <- ifelse(bs_data_num$ple_bs_p_total_bad == 0, 0, 1)
bs_data_num$ple_p_affect_bad_binary <- ifelse(bs_data_num$ple_bs_p_affect_bad_sum == 0, 0, 1)
bs_data_num$ple_p_good_binary <- ifelse(bs_data_num$ple_bs_p_total_good == 0, 0, 1)
bs_data_num$ple_p_affect_good_binary <- ifelse(bs_data_num$ple_bs_p_affect_good_sum == 0, 0, 1)
bs_data_num$ple_p_affect_binary <- ifelse(bs_data_num$ple_bs_p_sum_affect == 0, 0, 1)
bs_data_num$ple_y_affect_bad_binary <- ifelse(bs_data_num$ple_bs_y_affect_bad_sum == 0, 0, 1)
bs_data_num$ple_y_affect_good_binary <- ifelse(bs_data_num$ple_bs_y_affect_good_sum == 0, 0, 1)
bs_data_num$ple_y_affect_binary <- ifelse(bs_data_num$ple_bs_y_sum_affect == 0, 0, 1)
    

#####################################
######### PHYSICAL HEALTH ###########
#####################################
#physical activity
index <- colnames(bs_data_num)[which(substr(colnames(bs_data_num),1,12) == "physical_act")]
for(i in index){
      bs_data_num[,i]<-recode(bs_data_num[,i], "0 days"=0, "1 day"=1, "2 days"=2, "3 days"=3, "4 days"=4, "5 days"=5, "6 days"=6, "7 days"=7)
      #bs_data_num[is.na(bs_data_num[,i]),i] <- 0
    }

#sum
bs_data_num$physical_activity_sum <- with(bs_data_num, physical_activity_1+
                                             physical_activity_2+
                                             physical_activity_5)

# sleep
#How many hours of sleep does your child get on most nights?
bs_data_num$sleep_length <- recode(bs_data_num$sleep_1_p, "Less than 5 hours"=1, "5-7 hours"=2, "7-8 hours"=3, "8-9 hours"=4, "9-11 hours"=5)
#How long after going to bed does your child usually fall asleep? 
bs_data_num$sleep_delay <- recode(bs_data_num$sleep_2_p, "Less than 15 minutes"=1, "15-30 minutes"=2, "30-45 minutes"=3, "45-60 minutes"=4, "More than 60 minutes"=5) 


#####################################
###### SCREEN MEDIA ACTIVITY ########
#####################################
#parent report
bs_data_num$screentime_weekday <- ((bs_data_num$screentime_1_hours_p*60) + bs_data_num$screentime_1_minutes_p)    #computer, cellphone, tablet, or other electronic device
bs_data_num$screentime_weekend <- ((bs_data_num$screentime_2_hours_p*60) + bs_data_num$screentime_2_minutes_p)    #computer, cellphone, tablet, or other electronic device

#youth report
index <- colnames(bs_data_num)[which(substr(colnames(bs_data_num),1,15) == "screentime_wkdy")]
for(i in index){
  bs_data_num[,i]<-recode(bs_data_num[,i], "None"=0, "< 30 minutes"=.25, ".5"=.5, "1 hour"=1, "2 hours"=2, "3 hours"=3, "4+ hours"=4)
  #bs_data_num[is.na(bs_data_num[,i]),i] <- 0
}

index <- colnames(bs_data_num)[which(substr(colnames(bs_data_num),1,15) == "screentime_wknd")]
for(i in index){
  bs_data_num[,i]<-recode(bs_data_num[,i], "None"=0, ".25"=.25, ".5"=.5, "1 hour"=1, "2 hours"=2, "3 hours"=3, "4+ hours"=4)
  #bs_data_num[is.na(bs_data_num[,i]),i] <- 0
}

bs_data_num$screentime_13 <-recode(bs_data_num$screentime_13, "Never"=0, "Once in a while"=1, "Regularly"=2, "All the time"=3)
bs_data_num$screentime_14 <-recode(bs_data_num$screentime_14, "Never"=0, "Once in a while"=1, "Regularly"=2, "All the time"=3)

colnames(bs_data_num)[colnames(bs_data_num)=="screentime_wkdy_1"] <- "sma_wd_tvmovie"
colnames(bs_data_num)[colnames(bs_data_num)=="screentime_wkdy_2"] <- "sma_wd_videos"
colnames(bs_data_num)[colnames(bs_data_num)=="screentime_wkdy_3"] <- "sma_wd_games"
colnames(bs_data_num)[colnames(bs_data_num)=="screentime_wkdy_4"] <- "sma_wd_texting"
colnames(bs_data_num)[colnames(bs_data_num)=="screentime_wkdy_5"] <- "sma_wd_socialnetwork"
colnames(bs_data_num)[colnames(bs_data_num)=="screentime_wkdy_6"] <- "sma_wd_chat"
colnames(bs_data_num)[colnames(bs_data_num)=="screentime_wknd_7"] <- "sma_we_tvmovie"
colnames(bs_data_num)[colnames(bs_data_num)=="screentime_wknd_8"] <- "sma_we_videos"
colnames(bs_data_num)[colnames(bs_data_num)=="screentime_wknd_9"] <- "sma_we_games"
colnames(bs_data_num)[colnames(bs_data_num)=="screentime_wknd_10"] <- "sma_we_texting"
colnames(bs_data_num)[colnames(bs_data_num)=="screentime_wknd_11"] <- "sma_we_socialnetwork"
colnames(bs_data_num)[colnames(bs_data_num)=="screentime_wknd_12"] <- "sma_we_chat"
colnames(bs_data_num)[colnames(bs_data_num)=="screentime_13"] <- "sma_xgames"
colnames(bs_data_num)[colnames(bs_data_num)=="screentime_14"] <- "sma_rmovies"

#SUM
#### TOTALS BY TIME #####
#weekday
bs_data_num$sma_wd_sum <- with(bs_data_num, sma_wd_socialnetwork+
                                  sma_wd_chat+
                                  sma_wd_tvmovie+
                                  sma_wd_videos+
                                  sma_wd_games+
                                  sma_wd_texting)
#weekend
bs_data_num$sma_we_sum <- with(bs_data_num, sma_we_tvmovie+
                                  sma_we_videos+
                                  sma_we_games+
                                  sma_we_texting+
                                  sma_we_socialnetwork+
                                  sma_we_chat)
#x-rated
bs_data_num$sma_xrated_sum <- with(bs_data_num, sma_xgames + bs_data_num$sma_rmovies)

##### TOTALS BY CATEGORIES ######    
#total social    
bs_data_num$sma_total_social <- with(bs_data_num, sma_we_texting+
                                        sma_we_socialnetwork+
                                        sma_we_chat+
                                        sma_wd_socialnetwork+
                                        sma_wd_chat+
                                        sma_wd_texting)
#total video/passive    
bs_data_num$sma_total_passive <- with(bs_data_num, sma_we_tvmovie+
                                         sma_we_videos+
                                         sma_wd_tvmovie+
                                         sma_wd_videos)
#total gaming 
bs_data_num$sma_total_game <- with(bs_data_num, sma_we_games+
                                      sma_wd_games)
##### TOTALS BY TIME AND CATEGORIES ######    
#social    
bs_data_num$sma_we_social <- with(bs_data_num, sma_we_texting+
                                     sma_we_socialnetwork+
                                     sma_we_chat)
bs_data_num$sma_wd_social <- with(bs_data_num, sma_wd_socialnetwork+
                                     sma_wd_chat+
                                     sma_wd_texting)
#video/passive    
bs_data_num$sma_we_passive <- with(bs_data_num, sma_we_tvmovie+
                                      sma_we_videos)
bs_data_num$sma_wd_passive <- with(bs_data_num, sma_wd_tvmovie+
                                      sma_wd_videos)

#gaming 
bs_data_num$sma_we_game <- with(bs_data_num, sma_we_games)    
bs_data_num$sma_wd_game <- with(bs_data_num, sma_wd_games)    

# baseline and 1 year variable names
smalabels <- c("sma_wd_tvmovie","sma_wd_videos","sma_wd_games","sma_wd_texting","sma_wd_socialnetwork","sma_wd_chat",
               "sma_we_tvmovie","sma_we_videos","sma_we_games","sma_we_texting","sma_we_socialnetwork","sma_we_chat")
smavars_b <- paste0(smalabels,"")
smavars_soc_b <- c("sma_wd_social","sma_we_social")
smavars_pass_b <- c("sma_wd_passive","sma_we_passive")
smavars_gam_b <- c("sma_wd_game","sma_we_game")


# Calculate Baseline Screen Media Activity per Day
totweight <- c(5,5,5,5,5,5,2,2,2,2,2,2)/7
socweight <- c(5,2)/7

# Screen Media Time per day (texting, network, chatting)
bs_data_num$sma_tot = drop(as.matrix(bs_data_num[smavars_b]) %*% totweight)
bs_data_num$sma_tot_social = drop(as.matrix(bs_data_num[smavars_soc_b]) %*% socweight)
bs_data_num$sma_tot_passive = drop(as.matrix(bs_data_num[smavars_pass_b]) %*% socweight)
bs_data_num$sma_tot_gaming = drop(as.matrix(bs_data_num[smavars_gam_b]) %*% socweight)

#####################################
#### EXTRACURRICULAR ACTIVITIES #####
#####################################
index <- colnames(bs_data_num)[which(substr(colnames(bs_data_num),1,6) == "sai_ss")]

for(i in index){
  bs_data_num[,i]<-recode(bs_data_num[,i], "Less than one day per month/"=1, "One day every month"=2, "Once every 2 weeks"=3, "1"=4, "2"=5, 
                          "3"=6, "Don't know"=0, "4"=7, "5"=8, "6"=9, "7"=10, "0"=0)
  #bs_data_num[is.na(bs_data_num[,i]),i] <- 0
}

#social enrichment sums
bs_data_num$social_enrich_tot <- with(bs_data_num, sai_ss_sboard_perwk_p	+
                                               sai_ss_collect_perwk_p	+
                                               sai_ss_base_perwk_p	+
                                               sai_ss_basket_perwk_p+	
                                               sai_ss_climb_perwk_p	+
                                               sai_ss_fhock_perwk_p	+
                                               sai_ss_fball_perwk_p	+
                                               sai_ss_gym_perwk_p	+
                                               sai_ss_ihock_perwk_p+	
                                               sai_ss_polo_perwk_p	+
                                               sai_ss_iskate_perwk_p+	
                                               sai_ss_m_arts_perwk_p	+
                                               sai_ss_lax_perwk_p	+
                                               sai_ss_rugby_perwk_p+	
                                               sai_ss_skate_perwk_p+	
                                               sai_ss_dance_perwk_p+	
                                               sai_ss_soc_perwk_p	+
                                               sai_ss_surf_perwk_p	+
                                               sai_ss_wpolo_perwk_p+	
                                               sai_ss_tennis_perwk_p+	
                                               sai_ss_run_perwk_p	+
                                               sai_ss_mma_perwk_p	+
                                               sai_ss_vball_perwk_p+	
                                               sai_ss_yoga_perwk_p	+
                                               sai_ss_music_perwk_p+	
                                               sai_ss_art_perwk_p	+
                                               sai_ss_drama_perwk_p+	
                                               sai_ss_crafts_perwk_p+	
                                               sai_ss_chess_perwk_p)

bs_data_num$social_enrich_ARTS_tot <- with(bs_data_num, sai_ss_collect_perwk_p	+
                                          sai_ss_music_perwk_p+	
                                          sai_ss_art_perwk_p	+
                                          sai_ss_drama_perwk_p+	
                                          sai_ss_crafts_perwk_p+	
                                          sai_ss_chess_perwk_p)                        
bs_data_num$social_enrich_TEAM_tot <- with(bs_data_num, sai_ss_base_perwk_p	+
                                          sai_ss_basket_perwk_p+	
                                          sai_ss_fhock_perwk_p	+
                                          sai_ss_fball_perwk_p	+
                                          sai_ss_ihock_perwk_p+	
                                          sai_ss_polo_perwk_p	+
                                          sai_ss_lax_perwk_p	+
                                          sai_ss_rugby_perwk_p+	
                                          sai_ss_soc_perwk_p	+
                                          sai_ss_wpolo_perwk_p+	
                                          sai_ss_tennis_perwk_p+	
                                          sai_ss_vball_perwk_p)
bs_data_num$social_enrich_INDIV_tot <- with(bs_data_num, sai_ss_sboard_perwk_p	+
                                           sai_ss_climb_perwk_p	+
                                           sai_ss_gym_perwk_p	+
                                           sai_ss_iskate_perwk_p+	
                                           sai_ss_m_arts_perwk_p	+
                                           sai_ss_skate_perwk_p+	
                                           sai_ss_dance_perwk_p+	
                                           sai_ss_surf_perwk_p	+
                                           sai_ss_run_perwk_p	+
                                           sai_ss_mma_perwk_p	+
                                           sai_ss_yoga_perwk_p)

#####################################
############# OTHER #################
#####################################

#Religion
bs_data_num$religion=as.numeric(bs_data_num$macvs_ss_r_p)

#Peer Relationships
#sum
bs_data_num$resiliency_sum <- with(bs_data_num, resiliency_5a+
                                      resiliency_5b+
                                      resiliency_6a+
                                      resiliency_6b)
#bs_data_num$resiliency_sum[is.na(bs_data_num$resiliency_sum)] = 0

####################################
##### LABEL AS BASELINE ############
####################################

icol <- which(names(bs_data_num) %in% c("src_subject_id", "eventname", "abcd_site", "subjectid", "isTwin","FamilyID"))
colnames(bs_data_num)[-icol] <- paste(colnames(bs_data_num)[-icol], "bs", sep = "_")

#####################################
############# SAVE ##################
#####################################
saveRDS(bs_data_num, file = "ABCD_BASE_bx_coded.Rds")
save(bs_data_num,file = "ABCD_BASE_bx_coded.RData")
write.csv(bs_data_num,file ="ABCD_BASE_bx_coded.csv")  

